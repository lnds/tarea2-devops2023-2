version: '3'
services:
  movies-front:
    build:
      context: ./movies-front/
    command: npm start
    ports:
      - 3000:3000
    volumes:
      - ./movies-front/:/usr/app
      - /usr/app/node_modules
    depends_on:
      - movies-api
    environment:
      - REACT_PORT
      - REACT_APP_API_URI

  movies-api:
    build:
      context: ./movies-api
    command: ./movies-api -b ${BIND_IP} -p ${BIND_PORT}
    ports:
      - 8000:8000
    volumes:
      - ./movies-api:/app
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_PORT
      - POSTGRES_SERVER
    depends_on:
      db:
        condition: service_healthy
  
  db:
    image: postgres:15.3
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_PORT
    expose:
      - ${POSTGRES_PORT}
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  flyway:
    image: flyway/flyway:latest
    container_name: migration_flyway
    environment:
      - FLYWAY_USER=${POSTGRES_USER}
      - FLYWAY_PASSWORD=${POSTGRES_PASSWORD}
      - FLYWAY_URL=jdbc:postgresql://${POSTGRES_SERVER}:${POSTGRES_PORT}/${POSTGRES_DB}
      - FLYWAY_GROUP=true
    command: -locations=filesystem:/flyway/sql -connectRetries=60 migrate
    volumes:
      - ./sql_migrations:/flyway/sql
    depends_on:
      - db
